import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.dsl.KotlinVersion

buildscript {
    ext.kotlinVersion = '1.9.22'
    ext.gdxVersion = '1.12.0'

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://plugins.gradle.org/m2/" }
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:7.4.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlinVersion"
    }
}

allprojects {
    apply plugin: "kotlin"
    apply plugin: "idea"
    apply plugin: "org.jetbrains.kotlin.plugin.serialization"

    sourceSets.main.java.srcDirs = [ "src/" ]
    sourceSets.test.java.srcDirs = [ "test/" ]

    compileKotlin {
        compilerOptions.jvmTarget.set(JvmTarget.JVM_16)
        compilerOptions.languageVersion.set(KotlinVersion.KOTLIN_1_9)
    }

    version = "v0.5"

    ext {
        gdxVersion = '1.12.0'
        roboVMVersion = '2.3.16'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
        ktxVersion = '1.12.1-rc1'
        kotlinxCoroutineVersion = '1.7.3'
        kotlinxSerializationVersion = '1.6.1'
        gltfVersion = '2.0.0-rc.1'
        shapedrawerVersion = '2.6.0' //https://github.com/earlygrey/shapedrawer
        junitVersion = '5.9.3'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }

    dependencies {
        implementation fileTree(dir: 'lib', include: ['swisseph*.jar'])

        implementation fileTree(dir: '.', include: ['kcop*.jar'])

        implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$kotlinxSerializationVersion"

        testImplementation 'org.jetbrains.kotlin:kotlin-test'
    }
    test {
        useJUnitPlatform()
    }
}

tasks.register('sacFatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'river.exertion.sac'
    }
    archiveBaseName = 'sac-kcop'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from configurations.runtimeClasspath.findAll { it.name.contains("swisseph")}.collect {zipTree(it)}
    with jar
}

tasks.register('sacFatJarDeploy') {
    dependsOn sacFatJar

    copy {
        from "build/libs"
        into "assetExt/plugin"
        include "**/sac-kcop*"
    }
}